// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#include "event.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace eventinfo {

inline constexpr ServerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerResponse::ServerResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerResponseDefaultTypeInternal() {}
  union {
    ServerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;

inline constexpr Registry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : opcode_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        opcode_{0},
        status_{0u},
        init_time_{::int64_t{0}},
        index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Registry::Registry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegistryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegistryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegistryDefaultTypeInternal() {}
  union {
    Registry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegistryDefaultTypeInternal _Registry_default_instance_;

inline constexpr Process::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : opcode_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cmd_line_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        opcode_{0},
        pid_{0u},
        ppid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Process::Process(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProcessDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessDefaultTypeInternal() {}
  union {
    Process _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessDefaultTypeInternal _Process_default_instance_;

inline constexpr FileIO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : opcode_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        opcode_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FileIO::FileIO(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FileIODefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileIODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileIODefaultTypeInternal() {}
  union {
    FileIO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileIODefaultTypeInternal _FileIO_default_instance_;
}  // namespace eventinfo
static ::_pb::Metadata file_level_metadata_event_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_event_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_event_2eproto = nullptr;
const ::uint32_t TableStruct_event_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::eventinfo::Process, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::eventinfo::Process, _impl_.opcode_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Process, _impl_.opcode_name_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Process, _impl_.pid_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Process, _impl_.ppid_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Process, _impl_.cmd_line_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::eventinfo::FileIO, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::eventinfo::FileIO, _impl_.opcode_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::FileIO, _impl_.opcode_name_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::FileIO, _impl_.filename_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _impl_.opcode_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _impl_.opcode_name_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _impl_.init_time_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::eventinfo::Registry, _impl_.key_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::eventinfo::ServerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::eventinfo::ServerResponse, _impl_.msg_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::eventinfo::Process)},
        {13, -1, -1, sizeof(::eventinfo::FileIO)},
        {24, -1, -1, sizeof(::eventinfo::Registry)},
        {38, -1, -1, sizeof(::eventinfo::ServerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::eventinfo::_Process_default_instance_._instance,
    &::eventinfo::_FileIO_default_instance_._instance,
    &::eventinfo::_Registry_default_instance_._instance,
    &::eventinfo::_ServerResponse_default_instance_._instance,
};
const char descriptor_table_protodef_event_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\013event.proto\022\teventinfo\"[\n\007Process\022\016\n\006o"
    "pcode\030\001 \001(\005\022\023\n\013opcode_name\030\002 \001(\t\022\013\n\003pid\030"
    "\003 \001(\r\022\014\n\004ppid\030\004 \001(\r\022\020\n\010cmd_line\030\005 \001(\t\"\?\n"
    "\006FileIO\022\016\n\006opcode\030\001 \001(\005\022\023\n\013opcode_name\030\002"
    " \001(\t\022\020\n\010filename\030\003 \001(\t\"s\n\010Registry\022\016\n\006op"
    "code\030\001 \001(\005\022\023\n\013opcode_name\030\002 \001(\t\022\021\n\tinit_"
    "time\030\003 \001(\003\022\016\n\006status\030\004 \001(\r\022\r\n\005index\030\005 \001("
    "\r\022\020\n\010key_name\030\006 \001(\t\"\035\n\016ServerResponse\022\013\n"
    "\003msg\030\001 \001(\t2\316\001\n\tEventInfo\022\?\n\014ProcessEvent"
    "\022\022.eventinfo.Process\032\031.eventinfo.ServerR"
    "esponse(\001\022=\n\013FileIoEvent\022\021.eventinfo.Fil"
    "eIO\032\031.eventinfo.ServerResponse(\001\022A\n\rRegi"
    "stryEvent\022\023.eventinfo.Registry\032\031.eventin"
    "fo.ServerResponse(\001b\006proto3"
};
static ::absl::once_flag descriptor_table_event_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_event_2eproto = {
    false,
    false,
    547,
    descriptor_table_protodef_event_2eproto,
    "event.proto",
    &descriptor_table_event_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_event_2eproto::offsets,
    file_level_metadata_event_2eproto,
    file_level_enum_descriptors_event_2eproto,
    file_level_service_descriptors_event_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_event_2eproto_getter() {
  return &descriptor_table_event_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_event_2eproto(&descriptor_table_event_2eproto);
namespace eventinfo {
// ===================================================================

class Process::_Internal {
 public:
};

Process::Process(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:eventinfo.Process)
}
inline PROTOBUF_NDEBUG_INLINE Process::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : opcode_name_(arena, from.opcode_name_),
        cmd_line_(arena, from.cmd_line_),
        _cached_size_{0} {}

Process::Process(
    ::google::protobuf::Arena* arena,
    const Process& from)
    : ::google::protobuf::Message(arena) {
  Process* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, opcode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, opcode_),
           offsetof(Impl_, ppid_) -
               offsetof(Impl_, opcode_) +
               sizeof(Impl_::ppid_));

  // @@protoc_insertion_point(copy_constructor:eventinfo.Process)
}
inline PROTOBUF_NDEBUG_INLINE Process::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : opcode_name_(arena),
        cmd_line_(arena),
        _cached_size_{0} {}

inline void Process::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, opcode_),
           0,
           offsetof(Impl_, ppid_) -
               offsetof(Impl_, opcode_) +
               sizeof(Impl_::ppid_));
}
Process::~Process() {
  // @@protoc_insertion_point(destructor:eventinfo.Process)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Process::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.opcode_name_.Destroy();
  _impl_.cmd_line_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Process::Clear() {
// @@protoc_insertion_point(message_clear_start:eventinfo.Process)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opcode_name_.ClearToEmpty();
  _impl_.cmd_line_.ClearToEmpty();
  ::memset(&_impl_.opcode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ppid_) -
      reinterpret_cast<char*>(&_impl_.opcode_)) + sizeof(_impl_.ppid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Process::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 45, 2> Process::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Process_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 opcode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Process, _impl_.opcode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Process, _impl_.opcode_)}},
    // string opcode_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Process, _impl_.opcode_name_)}},
    // uint32 pid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Process, _impl_.pid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Process, _impl_.pid_)}},
    // uint32 ppid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Process, _impl_.ppid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Process, _impl_.ppid_)}},
    // string cmd_line = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Process, _impl_.cmd_line_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 opcode = 1;
    {PROTOBUF_FIELD_OFFSET(Process, _impl_.opcode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string opcode_name = 2;
    {PROTOBUF_FIELD_OFFSET(Process, _impl_.opcode_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 pid = 3;
    {PROTOBUF_FIELD_OFFSET(Process, _impl_.pid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 ppid = 4;
    {PROTOBUF_FIELD_OFFSET(Process, _impl_.ppid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string cmd_line = 5;
    {PROTOBUF_FIELD_OFFSET(Process, _impl_.cmd_line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\0\13\0\0\10\0\0"
    "eventinfo.Process"
    "opcode_name"
    "cmd_line"
  }},
};

::uint8_t* Process::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:eventinfo.Process)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 opcode = 1;
  if (this->_internal_opcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_opcode(), target);
  }

  // string opcode_name = 2;
  if (!this->_internal_opcode_name().empty()) {
    const std::string& _s = this->_internal_opcode_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.Process.opcode_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 pid = 3;
  if (this->_internal_pid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_pid(), target);
  }

  // uint32 ppid = 4;
  if (this->_internal_ppid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_ppid(), target);
  }

  // string cmd_line = 5;
  if (!this->_internal_cmd_line().empty()) {
    const std::string& _s = this->_internal_cmd_line();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.Process.cmd_line");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eventinfo.Process)
  return target;
}

::size_t Process::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eventinfo.Process)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string opcode_name = 2;
  if (!this->_internal_opcode_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_opcode_name());
  }

  // string cmd_line = 5;
  if (!this->_internal_cmd_line().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cmd_line());
  }

  // int32 opcode = 1;
  if (this->_internal_opcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_opcode());
  }

  // uint32 pid = 3;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_pid());
  }

  // uint32 ppid = 4;
  if (this->_internal_ppid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ppid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Process::_class_data_ = {
    Process::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Process::GetClassData() const {
  return &_class_data_;
}

void Process::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Process*>(&to_msg);
  auto& from = static_cast<const Process&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:eventinfo.Process)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_opcode_name().empty()) {
    _this->_internal_set_opcode_name(from._internal_opcode_name());
  }
  if (!from._internal_cmd_line().empty()) {
    _this->_internal_set_cmd_line(from._internal_cmd_line());
  }
  if (from._internal_opcode() != 0) {
    _this->_internal_set_opcode(from._internal_opcode());
  }
  if (from._internal_pid() != 0) {
    _this->_internal_set_pid(from._internal_pid());
  }
  if (from._internal_ppid() != 0) {
    _this->_internal_set_ppid(from._internal_ppid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Process::CopyFrom(const Process& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eventinfo.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Process::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Process::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Process::InternalSwap(Process* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.opcode_name_, &other->_impl_.opcode_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cmd_line_, &other->_impl_.cmd_line_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Process, _impl_.ppid_)
      + sizeof(Process::_impl_.ppid_)
      - PROTOBUF_FIELD_OFFSET(Process, _impl_.opcode_)>(
          reinterpret_cast<char*>(&_impl_.opcode_),
          reinterpret_cast<char*>(&other->_impl_.opcode_));
}

::google::protobuf::Metadata Process::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_event_2eproto_getter, &descriptor_table_event_2eproto_once,
      file_level_metadata_event_2eproto[0]);
}
// ===================================================================

class FileIO::_Internal {
 public:
};

FileIO::FileIO(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:eventinfo.FileIO)
}
inline PROTOBUF_NDEBUG_INLINE FileIO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : opcode_name_(arena, from.opcode_name_),
        filename_(arena, from.filename_),
        _cached_size_{0} {}

FileIO::FileIO(
    ::google::protobuf::Arena* arena,
    const FileIO& from)
    : ::google::protobuf::Message(arena) {
  FileIO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.opcode_ = from._impl_.opcode_;

  // @@protoc_insertion_point(copy_constructor:eventinfo.FileIO)
}
inline PROTOBUF_NDEBUG_INLINE FileIO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : opcode_name_(arena),
        filename_(arena),
        _cached_size_{0} {}

inline void FileIO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.opcode_ = {};
}
FileIO::~FileIO() {
  // @@protoc_insertion_point(destructor:eventinfo.FileIO)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FileIO::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.opcode_name_.Destroy();
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FileIO::Clear() {
// @@protoc_insertion_point(message_clear_start:eventinfo.FileIO)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opcode_name_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  _impl_.opcode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FileIO::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> FileIO::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FileIO_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 opcode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FileIO, _impl_.opcode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FileIO, _impl_.opcode_)}},
    // string opcode_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FileIO, _impl_.opcode_name_)}},
    // string filename = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FileIO, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 opcode = 1;
    {PROTOBUF_FIELD_OFFSET(FileIO, _impl_.opcode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string opcode_name = 2;
    {PROTOBUF_FIELD_OFFSET(FileIO, _impl_.opcode_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string filename = 3;
    {PROTOBUF_FIELD_OFFSET(FileIO, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\13\10\0\0\0\0"
    "eventinfo.FileIO"
    "opcode_name"
    "filename"
  }},
};

::uint8_t* FileIO::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:eventinfo.FileIO)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 opcode = 1;
  if (this->_internal_opcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_opcode(), target);
  }

  // string opcode_name = 2;
  if (!this->_internal_opcode_name().empty()) {
    const std::string& _s = this->_internal_opcode_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.FileIO.opcode_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string filename = 3;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.FileIO.filename");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eventinfo.FileIO)
  return target;
}

::size_t FileIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eventinfo.FileIO)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string opcode_name = 2;
  if (!this->_internal_opcode_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_opcode_name());
  }

  // string filename = 3;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  // int32 opcode = 1;
  if (this->_internal_opcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_opcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FileIO::_class_data_ = {
    FileIO::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FileIO::GetClassData() const {
  return &_class_data_;
}

void FileIO::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FileIO*>(&to_msg);
  auto& from = static_cast<const FileIO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:eventinfo.FileIO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_opcode_name().empty()) {
    _this->_internal_set_opcode_name(from._internal_opcode_name());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_opcode() != 0) {
    _this->_internal_set_opcode(from._internal_opcode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileIO::CopyFrom(const FileIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eventinfo.FileIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FileIO::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FileIO::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FileIO::InternalSwap(FileIO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.opcode_name_, &other->_impl_.opcode_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
        swap(_impl_.opcode_, other->_impl_.opcode_);
}

::google::protobuf::Metadata FileIO::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_event_2eproto_getter, &descriptor_table_event_2eproto_once,
      file_level_metadata_event_2eproto[1]);
}
// ===================================================================

class Registry::_Internal {
 public:
};

Registry::Registry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:eventinfo.Registry)
}
inline PROTOBUF_NDEBUG_INLINE Registry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : opcode_name_(arena, from.opcode_name_),
        key_name_(arena, from.key_name_),
        _cached_size_{0} {}

Registry::Registry(
    ::google::protobuf::Arena* arena,
    const Registry& from)
    : ::google::protobuf::Message(arena) {
  Registry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, opcode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, opcode_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, opcode_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:eventinfo.Registry)
}
inline PROTOBUF_NDEBUG_INLINE Registry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : opcode_name_(arena),
        key_name_(arena),
        _cached_size_{0} {}

inline void Registry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, opcode_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, opcode_) +
               sizeof(Impl_::index_));
}
Registry::~Registry() {
  // @@protoc_insertion_point(destructor:eventinfo.Registry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Registry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.opcode_name_.Destroy();
  _impl_.key_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Registry::Clear() {
// @@protoc_insertion_point(message_clear_start:eventinfo.Registry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opcode_name_.ClearToEmpty();
  _impl_.key_name_.ClearToEmpty();
  ::memset(&_impl_.opcode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.opcode_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Registry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 46, 2> Registry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Registry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 opcode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Registry, _impl_.opcode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Registry, _impl_.opcode_)}},
    // string opcode_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Registry, _impl_.opcode_name_)}},
    // int64 init_time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Registry, _impl_.init_time_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Registry, _impl_.init_time_)}},
    // uint32 status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Registry, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Registry, _impl_.status_)}},
    // uint32 index = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Registry, _impl_.index_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Registry, _impl_.index_)}},
    // string key_name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Registry, _impl_.key_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 opcode = 1;
    {PROTOBUF_FIELD_OFFSET(Registry, _impl_.opcode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string opcode_name = 2;
    {PROTOBUF_FIELD_OFFSET(Registry, _impl_.opcode_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 init_time = 3;
    {PROTOBUF_FIELD_OFFSET(Registry, _impl_.init_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 status = 4;
    {PROTOBUF_FIELD_OFFSET(Registry, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 index = 5;
    {PROTOBUF_FIELD_OFFSET(Registry, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string key_name = 6;
    {PROTOBUF_FIELD_OFFSET(Registry, _impl_.key_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\13\0\0\0\10\0"
    "eventinfo.Registry"
    "opcode_name"
    "key_name"
  }},
};

::uint8_t* Registry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:eventinfo.Registry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 opcode = 1;
  if (this->_internal_opcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_opcode(), target);
  }

  // string opcode_name = 2;
  if (!this->_internal_opcode_name().empty()) {
    const std::string& _s = this->_internal_opcode_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.Registry.opcode_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 init_time = 3;
  if (this->_internal_init_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_init_time(), target);
  }

  // uint32 status = 4;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_status(), target);
  }

  // uint32 index = 5;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_index(), target);
  }

  // string key_name = 6;
  if (!this->_internal_key_name().empty()) {
    const std::string& _s = this->_internal_key_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.Registry.key_name");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eventinfo.Registry)
  return target;
}

::size_t Registry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eventinfo.Registry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string opcode_name = 2;
  if (!this->_internal_opcode_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_opcode_name());
  }

  // string key_name = 6;
  if (!this->_internal_key_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key_name());
  }

  // int32 opcode = 1;
  if (this->_internal_opcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_opcode());
  }

  // uint32 status = 4;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_status());
  }

  // int64 init_time = 3;
  if (this->_internal_init_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_init_time());
  }

  // uint32 index = 5;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Registry::_class_data_ = {
    Registry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Registry::GetClassData() const {
  return &_class_data_;
}

void Registry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Registry*>(&to_msg);
  auto& from = static_cast<const Registry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:eventinfo.Registry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_opcode_name().empty()) {
    _this->_internal_set_opcode_name(from._internal_opcode_name());
  }
  if (!from._internal_key_name().empty()) {
    _this->_internal_set_key_name(from._internal_key_name());
  }
  if (from._internal_opcode() != 0) {
    _this->_internal_set_opcode(from._internal_opcode());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_init_time() != 0) {
    _this->_internal_set_init_time(from._internal_init_time());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Registry::CopyFrom(const Registry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eventinfo.Registry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Registry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Registry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Registry::InternalSwap(Registry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.opcode_name_, &other->_impl_.opcode_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_name_, &other->_impl_.key_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Registry, _impl_.index_)
      + sizeof(Registry::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(Registry, _impl_.opcode_)>(
          reinterpret_cast<char*>(&_impl_.opcode_),
          reinterpret_cast<char*>(&other->_impl_.opcode_));
}

::google::protobuf::Metadata Registry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_event_2eproto_getter, &descriptor_table_event_2eproto_once,
      file_level_metadata_event_2eproto[2]);
}
// ===================================================================

class ServerResponse::_Internal {
 public:
};

ServerResponse::ServerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:eventinfo.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : msg_(arena, from.msg_),
        _cached_size_{0} {}

ServerResponse::ServerResponse(
    ::google::protobuf::Arena* arena,
    const ServerResponse& from)
    : ::google::protobuf::Message(arena) {
  ServerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:eventinfo.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_(arena),
        _cached_size_{0} {}

inline void ServerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:eventinfo.ServerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.msg_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eventinfo.ServerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> ServerResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string msg = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string msg = 1;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\3\0\0\0\0\0\0"
    "eventinfo.ServerResponse"
    "msg"
  }},
};

::uint8_t* ServerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:eventinfo.ServerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string msg = 1;
  if (!this->_internal_msg().empty()) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "eventinfo.ServerResponse.msg");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eventinfo.ServerResponse)
  return target;
}

::size_t ServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eventinfo.ServerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1;
  if (!this->_internal_msg().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerResponse::_class_data_ = {
    ServerResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerResponse::GetClassData() const {
  return &_class_data_;
}

void ServerResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerResponse*>(&to_msg);
  auto& from = static_cast<const ServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:eventinfo.ServerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eventinfo.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerResponse::InternalSwap(ServerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
}

::google::protobuf::Metadata ServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_event_2eproto_getter, &descriptor_table_event_2eproto_once,
      file_level_metadata_event_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace eventinfo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
